DROP TABLE IF EXISTS habilitacao CASCADE;
DROP TABLE IF EXISTS motorista CASCADE;
DROP TABLE IF EXISTS veiculo CASCADE;
DROP TABLE IF EXISTS passageiro CASCADE;
DROP TABLE IF EXISTS corrida CASCADE;

CREATE TABLE habilitacao(
	id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	numero VARCHAR(11) NOT NULL,
	categoria VARCHAR(255) NOT NULL,
	data_vencimento DATE NOT NULL
);

ALTER TABLE habilitacao ADD CONSTRAINT pk_habilitacao PRIMARY KEY (id);
ALTER TABLE habilitacao ADD CONSTRAINT uk_habilitacao_numero UNIQUE(numero);
ALTER TABLE habilitacao ADD CONSTRAINT ck_habilitacao_categoria CHECK(categoria IN('A', 'B', 'C'));

CREATE TABLE motorista(
	id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	nome VARCHAR(100) NOT NULL,
	data_nascimento DATE NOT NULL,
	cpf VARCHAR(11) NOT NULL,
	id_habilitacao BIGINT NOT NULL,
	ativo BOOLEAN NOT NULL,
	situacao VARCHAR(10) NOT NULL,
	saldo DECIMAL NOT NULL,
	avaliacao DECIMAL
);

ALTER TABLE motorista ADD CONSTRAINT pk_motorista PRIMARY KEY (id);
ALTER TABLE motorista ADD CONSTRAINT uk_motorista_cpf UNIQUE(cpf);
ALTER TABLE motorista ADD CONSTRAINT fk_motorista_habilitacao FOREIGN KEY (id_habilitacao) REFERENCES habilitacao(id);
ALTER TABLE motorista ADD CONSTRAINT ck_motorista_situacao CHECK(situacao IN('SOLICITADA', 'INICIADA', 'OCIOSO'));

CREATE TABLE veiculo(
	id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	modelo VARCHAR(50) NOT NULL,
	cor VARCHAR(25) NOT NULL,
	foto_url VARCHAR(200) NOT NULL,
	categoria VARCHAR(1) NOT NULL,
	id_motorista BIGINT NOT NULL,
	ativo boolean NOT NULL
);

ALTER TABLE veiculo ADD CONSTRAINT pk_veiculo PRIMARY KEY (id);
ALTER TABLE veiculo ADD CONSTRAINT ck_veiculo_categoria CHECK(categoria IN('A', 'B', 'C'));
ALTER TABLE veiculo ADD CONSTRAINT fk_veiculo_motorista FOREIGN KEY (id_motorista) REFERENCES motorista(id);

CREATE TABLE passageiro(
	id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	nome VARCHAR(100) NOT NULL,
	data_nascimento DATE NOT NULL,
	cpf VARCHAR(11) NOT NULL,
	situacao VARCHAR(10) NOT NULL,
	saldo DECIMAL NOT NULL,
	ativo boolean NOT NULL,
	avaliacao DECIMAL
);

ALTER TABLE passageiro ADD CONSTRAINT pk_passageiro PRIMARY KEY (id);
ALTER TABLE passageiro ADD CONSTRAINT uk_passageiro_cpf UNIQUE(cpf);
ALTER TABLE passageiro ADD CONSTRAINT ck_passageiro_situacao CHECK(situacao IN('SOLICITADA', 'INICIADA', 'OCIOSO'));

CREATE TABLE corrida(
	id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	id_passageiro BIGINT NOT NULL,
	id_motorista BIGINT NOT NULL,
	id_veiculo BIGINT NOT NULL,
	ponto_inicialX DECIMAL NOT NULL,
	ponto_inicialY DECIMAL NOT NULL,
	ponto_finalX DECIMAL NOT NULL,
	ponto_finalY DECIMAL NOT NULL,
	situacao VARCHAR(10) NOT NULL,
	data_inicial TIMESTAMP,
	data_final TIMESTAMP,
	valor DECIMAL,
	avaliacao_passageiro INT,
	avaliacao_motorista INT
);

ALTER TABLE corrida ADD CONSTRAINT pk_corrida PRIMARY KEY(id);
ALTER TABLE corrida ADD CONSTRAINT fk_corrida_passageiro FOREIGN KEY(id_passageiro) REFERENCES passageiro(id);
ALTER TABLE corrida ADD CONSTRAINT fk_corrida_motorista FOREIGN KEY(id_motorista) REFERENCES motorista(id);
ALTER TABLE corrida ADD CONSTRAINT fk_corrida_veiculo FOREIGN KEY(id_veiculo) REFERENCES veiculo(id);
ALTER TABLE corrida ADD CONSTRAINT ck_corrida_situacao CHECK(situacao IN('SOLICITADA', 'INICIADA', 'FINALIZADA'));
																							  